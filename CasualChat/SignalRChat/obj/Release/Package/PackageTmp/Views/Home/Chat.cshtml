@{
    ViewBag.Title = "即时通讯软件";
}


<style type="text/css">
    .container {
    }

    .content {
        height: 500px;
        border: 1px solid red;
        background-color: silver;
        margin: auto;
    }

    .messagebox {
        margin: auto;
        height: 630px;
        width: 800px;
        border: 2px solid black;
    }

    .messagebox .sender {
        margin: 2px 1px;
        height: 120px;
    }

    .messagebox .sender .message {
        margin: auto 2px;
        height: 80px;
        width: 710px;
        max-width: 720px;
    }

    .messagestyle {
    }

    .send {
        height: 80px;
        width: 70px;
        font-family: "楷体";
        font-size: 18px;
    }
</style>
  
<link rel="stylesheet" href="~/Content/message.css"></link>

<div class="container">
    <h2 style="text-align:center"><strong>某某在线交流平台</strong></h2>
    <div class="messagebox">
        <div id="content" class="content" style="overflow:auto"></div> 
        <div class="sender">
            <textarea class="message" id="message" placeholder="请输入聊天内容"></textarea>
            <input class="send" type="button" id="sendmessage" value="发  送" />
        </div>
    </div>
    <input type="hidden" id="displayname" />

    <label class="sendername">测试姓名</label>
      
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--SignalR script to update the chat page and send messages.-->
    <script> 
        $(function () {
            function sendMessage() {
                var content = $('#message').val();
                if (content === "") { alert('请输入聊天内容'); $('#message').val('').focus(); return; }; 
                // Call the Send method on the hub.
                chat.server.send($('#displayname').val(), content);
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            }

            $("#message").keydown(function (e) {
                if (e.ctrlKey && e.keyCode === 13)　{
                    sendMessage();
                }
            });

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) { 
                var myname = $('#displayname').val(); 
                if (name !== myname) {
                    // Add the message to the page.
                    $('#content').append('<ul class="leftd"><li class="sendername" ><strong >' + htmlEncode(name) + '</strong></li><li class="speech left">' + htmlEncode(message) + '</li></ul>');
                }
                else {
                    $('#content').append('<ul class="rightd"><li class="speech right"> ' + htmlEncode(message) + '</li></ul>');
                } 
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    sendMessage();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
         
        function leftMessageHtmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function rightMessageHtmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}